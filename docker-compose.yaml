services:
  app:
    build:
      context: .
      target: weather
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      - database
    networks:
      - weather-app

  scheduler:
    build:
      context: .
      target: scheduler
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    env_file:
      - .env
    depends_on:
      - database
      - redis
    networks:
      - weather-app

  database:
    image: postgres:latest
    ports:
      - "5454:5432"
    networks:
      - weather-app
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db-weather-data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: weather-redis
    ports:
      - "6380:6379"
    networks:
      - weather-app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-weather-data:

networks:
  weather-app:
    driver: bridge
